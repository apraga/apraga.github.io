#+title: Command-line utilities
#+date: 2024-02-20 

Here is a curated list of tools that I cannot live without, after many
iterations (last update is January, 15th 2025). Working on Linux and
Windows, I try to use cross-platforms tools.

* Must-have
- [[https://www.nushell.sh/][nushell]] is my shell. [[https://fishshell.com/docs/current/tutorial.html][fish]] is nice but if you want to lose POSIX compatibility, you should go all the way and embrace a new workflow. It considers all data as table, allowing for powerful manipulation. It makes shell scripting /fun/ by staying is a single language. Also, pandas support has been added :)
- [[https://github.com/ajeetdsouza/zoxide][zoxide]] is fantastic for moving around quickly in the shell. For example, =z boo= jumps to ~book~, instead of typing =cd home/user/misc/books=. A must have.
- [[https://typst.app/][typst]] for writing papers and reports. More on that in a future post.
- [[https://github.com/BurntSushi/ripgrep][ripgrep]] is a modern =grep= but cross-platform and faster.
- [[https://wezfurlong.org/wezterm/index.html][wezterm]] as a terminal, also available on Windows. Alternative are =alacrity= (with a terminal multiplexer like =zellij= or =tmux=) or =kitty= (not available on Windows) that have built-in tabs and windows
- [[https://martinvonz.github.io/jj/latest/][jj]] has replaced =git= in my workflow (jj is compatible with git though). But there are nice TUI interfaces with git worth mentioning : =lazygit= [fn:1]
- [[https://atuin.sh/][atuin]] to search shell history 
- [[https://www.chezmoi.io/quick-start/][chezmoi]] to manage dotfiles  

* For the occasional use

- [[https://gohugo.io/][hugo]] for this blog. Contrary to [[https://www.getzola.org/][zola]], it supports org-mode.
- [[https://rust-lang.github.io/mdBook/][mdBook]] is my go-to way of generating documentation. Theme is very readable and setup is reasonably fast.
- [[https://github.com/pier-cli/pier][pier]] serves as a database for your one-liners. For example, I have a Haskell script to toggle between a dark and light theme that is run with
  =pier run change-theme=.

* Awesome tools that I no longer use
These may be of interest to other people but these are been superseded
in my workflow.

- [[https://taskwarrior.org/][taskwarrior]] to manage tasks for non Org-mode users. More on that in a future post.
- Replacement of =find=, =ls= and =bat= in Rust are really cool but in practice, ~nushell~ is enough for my cases:
    - [[https://github.com/sharkdp/fd][fd]] has an easier syntax than =find= (written in Rust). For example, convert all org files to markdown with
#+begin_src bash
fd -e md -x pandoc {} -o {.}.md
#+end_src
    - [[https://github.com/chmln/sd][sd]] also offers a simpler way to replace text with =sd=. Example: replace =title:= by =title == :
#+begin_src bash
      sd 'title:' 'title = '=
#+end_src bash
      - [[https://github.com/eza-community/eza][eza]] can replace =ls=
      - [[sttps://github.com/sharkdp/bat][bat]] is more colorful that =cat=

* Inspiration
Several ideas came from
[[https://github.com/agarrharr/awesome-cli-apps?tab=readme-ov-file][awesome
cli apps list on github]]. See also
[[https://github.com/sts10/rust-command-line-utilities?tab=readme-ov-file][other
tools written in Rust]]

[fn:1] Or =gitui= but
       [[https://github.com/extrawurst/gitui/issues/2158][this issue]]
       is troublesome.
