[{"content":" Here is a small summary from my journey from vim to using Emacs for (almost) everything. After using ViM for a few years, I wanted to try Emacs. There are 3 different approaches to get into emacs.\nCreate your config from scratch. This is the hard way ! Use a starter kit. There are numerous: purcell\u0026#39;s or more minimalist like SystemCrafters, emacs-bedrock Use a distribution : Spacemacs Doom emacs are the most popular for evil users My advice is to start with Doom-Emacs as all the work is done for you ! It also shows what Emacs can do and it\u0026#39;s not limited to editing text. I am now building my own configuration based on minimal-emacs but learned a lot after using Doom-Emacs for more than 2 years.\nThis post is a complete rewrite of an older one. Instead of listing nice packages, I would like to give a taste on how Emacs can change the way you work.\nHappy camping in emacs Emacs really shines as a consistent framework. In other words, the more you use Emacs for various tasks, the more it makes sense. On the other hand, if you start to use other software, it may lose much of its interest. Having said that, I did use only Emacs for org-mode during my PhD…\nI use it to manage tasks with org-mode, write code using lsp, move files around with dired, use it like a \u0026#34;second brain\u0026#34; with org-roam, annotate papers with citar and read mail with not-much. With this setup, most of my time is spent inside emacs but drop to the shell from time to time, mostly to use jj. For git users, magit is a superb wrapper aroud git.\nIf you are okay living in text-only buffers and commit to this approach, digging into Emacs may blow your mind. For example, you can get the results of a grep command into a buffer and editing the buffer will replace the file contents at once ! Listing directory content can also be edited in a buffer, allow to mass rename files. This can of course be done in other file managers, like yazi, a powerful newcomer in this field. But emacs makes it integrated to the rest of your worklow.\nWhat recently blew my mind was a package called embark. What it does looks boring or not really clear from the project description. But, combind with a completion UI like vertico, you can apply \u0026#34;combos\u0026#34; on your actions. Let me give you a single example. My notes are managed with org-roam and tagged according to their content. To created a note listing all files with the tag genetics, I can extract all matching results from the minibuffer into my new file and get their links ! If that seems a bit abstract, I highly recommand taking the time to read Karthinks post about it. It has a lot of examples easy to follow.\nFinally, I will not advertise org-mode. Others have done it before much better than I could.\nTaking a scroll outside emacs Can you go too far using Emacs ? Some use it as their window manager. For me, you have to be okay with the \u0026#34;text-only\u0026#34; approach. For example, if you take notes, formatting will not look as nice as using a GUI. On Windows, I struggled to make Doom emacs work. People recommend to use WSL to run Emacs but it\u0026#39;s not the more practical way. I chose to drop emacs, use Emacs 30 with native-compilation and a minimal starter kit. Performance is okay, unless for actions involving I/O, like mass-renaming files.\nI still use the terminal, with jj and nushell. Emacs has its own shell shell called eshell but got bitten by bad performances in the past. It may need to be revisited though.\nFinally, for inspiration, awesome-emacs is a curated list of plugins by the community.\n","date":"2025-03-28T00:00:00Z","permalink":"https://alexis.praga.dev/p/life-in-emacs-revisited/","title":"Life in Emacs (revisited)"},{"content":" I recently subscribed to guix-devel, a rather high-volume mailing lists. Even though you could manage such volume by hand, public-inbox is an alternate way to deal with that.\nThe idea is not to subscribe to the mailing list, but rather to use git as an interface, thus bypassing the email provider. It fits notmuch paradigm rather well with notmuch-lore as an interface. Building on our mail config, we only need to\nsetup the link to the public-inbox for the mailing list in ~/mail/.notmuch/.lore/sources (there should be no slash at the end of the URL) [guix-devel] url=https://yhetil.org/guix-devel clone https://github.com/wkz/notmuch-lore locally, for example git clone https://github.com/wkz/notmuch-lore ~/mail/.notmuch/hooks/notmuch-lore chmod +x ~/mail/.notmuch/hooks/notmuch-lore/pre-new and add it to ~/mail/.notmuch/hooks/pre-new\n#!/bin/sh mbsync -a /home/alex/mail/.notmuch/hooks/notmuch-lore/pre-new Then notmuch new will create a local maildir mirroring the mailing list. The only drawback is the mailing list will only be downloaded locally. So webmail users will need to get to the mailing list public URL themselves.\n","date":"2025-02-21T00:00:00Z","permalink":"https://alexis.praga.dev/p/manage-mailing-lists-with-public-inbox/","title":"Manage mailing lists with public-inbox"},{"content":" Here is a curated list of tools that I cannot live without, after many iterations (last update is January, 15th 2025). Working on Linux and Windows, I try to use cross-platforms tools.\nMust-have nushell is my shell. fish is nice but if you want to lose POSIX compatibility, you should go all the way and embrace a new workflow. It considers all data as table, allowing for powerful manipulation. It makes shell scripting fun by staying is a single language. Also, pandas support has been added :) zoxide is fantastic for moving around quickly in the shell. For example, z boo jumps to book, instead of typing cd home/user/misc/books. A must have. typst for writing papers and reports. More on that in a future post. ripgrep is a modern grep but cross-platform and faster. wezterm as a terminal, also available on Windows. Alternative are alacrity (with a terminal multiplexer like zellij or tmux) or kitty (not available on Windows) that have built-in tabs and windows jj has replaced git in my workflow (jj is compatible with git though). But there are nice TUI interfaces with git worth mentioning : lazygit 1 atuin to search shell history chezmoi to manage dotfiles For the occasional use hugo for this blog. Contrary to zola, it supports org-mode. mdBook is my go-to way of generating documentation. Theme is very readable and setup is reasonably fast. pier serves as a database for your one-liners. For example, I have a Haskell script to toggle between a dark and light theme that is run with pier run change-theme. Awesome tools that I no longer use These may be of interest to other people but these are been superseded in my workflow.\ntaskwarrior to manage tasks for non Org-mode users. More on that in a future post. Replacement of find, ls and bat in Rust are really cool but in practice, nushell is enough for my cases:\nfd has an easier syntax than find (written in Rust). For example, convert all org files to markdown with 1 fd -e md -x pandoc {} -o {.}.md sd also offers a simpler way to replace text with sd. Example: replace title: by title = : 1 sd \u0026#39;title:\u0026#39; \u0026#39;title = \u0026#39;= eza can replace ls bat is more colorful that cat Inspiration Several ideas came from awesome cli apps list on github. See also other tools written in Rust\n1 Or gitui but this issue is troublesome.\n","date":"2024-02-20T00:00:00Z","permalink":"https://alexis.praga.dev/p/command-line-utilities/","title":"Command-line utilities"},{"content":" Today, we will see how to read and mails locally for fast search. Using the powerful notmuch, a local database will be created. By default, notmuch do not move or remove mails but just operate on tags. 5 steps are needed:\nsynchronize mail locally (mbsync) index and tag mail (notmuch) use an email client (emacs interface to notmuch), with msmtp for sending mail move mails according to the tags (afew) Once everything is setup, you will only need to run notmuch new.\nUpdated on: 2025-02-20\nSynchronize mail locally (mbsync) Mbsync setup with an Infomaniak email account with the following ~/.mbsyncrc. The list of folders is hardcoded in Patterns:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 IMAPAccount infomaniak Host mail.infomaniak.com Port 993 User $USER Pass $PASS SSLType IMAPS IMAPStore info-remote Account infomaniak MaildirStore info-local Path ~/mail/ Inbox ~/mail/INBOX/ Subfolders Verbatim Channel info Far :info-remote: Near :info-local: Patterns INBOX Archives Drafts Sent Spam Trash Create Both Expunge Both SyncState * Try it with mbsync -a.\nIndex and tag mail (notmuch) For faster search, we create a local database for mails. This adds another layer on our stack as we will need to synchronize the database with locat files. notmuch do not delete files ! Configuration is simple:\n1 notmuch init Use an email client (notmuch-emacs) with doom-emacs, enable the notmuch interface in ~/.config/doom.d/init.el\n1 2 :email notmuch Some setup is required for inbox: I want mails tagged as \u0026#34;new\u0026#34; only. Then archiving and deleting should remove the appropriate tags (note: afew should) Deleting is done either with d (adds +deleted) or SPC m d (call +notmuch-delete-tags defined below).\n1 2 3 4 5 6 7 8 ;; Mail settings (after! notmuch (setq +notmuch-sync-backend \u0026#34;notmuch new\u0026#34; +notmuch-delete-tags \u0026#39;(\u0026#34;+deleted\u0026#34; \u0026#34;-inbox\u0026#34; \u0026#34;-new\u0026#34; \u0026#34;-unread\u0026#34;) +notmuch-home-function (lambda () (notmuch-search \u0026#34;tag:new\u0026#34;)) notmuch-archive-tags \u0026#39;(\u0026#34;+archive\u0026#34; \u0026#34;-inbox\u0026#34; \u0026#34;-new\u0026#34; \u0026#34;-unread\u0026#34;))) (setq sendmail-program \u0026#34;/usr/bin/msmtp\u0026#34; ) msmtp for sending mail A simple version with password stored in plain text: ~/.msmtprc\ndefaults auth on tls on tls_trust_file /etc/ssl/certs/ca-certificates.crt logfile ~/.msmtp.log account infomaniak host mail.infomaniak.com port 465 tls_starttls off from $EMAIL user $EMAIL password $PASS account default: infomaniak Change permissions\n1 $ chmod 600 ~/.msmtprc Test it with :\n1 echo \u0026#34;this is some content2\u0026#34; | msmtp -a infomaniak -- $EMAIL Move mails according to the tags (afew) notmuch will not rename or move files around. afew offers an easy way to do that. I use the default filters and I move files accordingly.\n# This is the default filter chain [SpamFilter] [KillThreadsFilter] [ListMailsFilter] [ArchiveSentMailsFilter] # Disable default behavior (all message not spam and not \u0026#39;killed\u0026#39; have the inbox tag) # [InboxFilter] # Assume afew is run with --new [Filter.1] message = \u0026#39;Remove new tag for archived and trashed mail\u0026#39; query = folder:Archives OR tag:archive OR folder:Trash or tag:deleted tags = -new;+archive [MailMover] folders = INBOX Archives rename = True # rules # Assume afew is run with --new INBOX = \u0026#39;tag:deleted\u0026#39;:Trash \u0026#39;tag:archive\u0026#39;:Archives Archives = \u0026#39;tag:deleted\u0026#39;:Trash Putting everything together Create ~/mail/.notmuch/hooks/pre-new with\n#!/bin/sh mbsync -a Create ~/mail/.notmuch/hooks/post-new with\n#!/bin/sh afew --new --tag afew --new --move Make both files executables with chmod +x. Then notmuch new will sync first, add tags and use afew for cleanup !\n","date":"2020-10-01T00:00:00Z","permalink":"https://alexis.praga.dev/p/mail-with-notmuch/","title":"Mail with notmuch"}]